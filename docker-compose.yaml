version: '3.8'
services:
  bff-microservices:
    container_name: bff-microservices
    build:
      context: ./dockerfiles/microservices/bff
      dockerfile: bff.dockerfile
    working_dir: /app
    volumes:
      - ./microservices/bff-microservices:/app
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box

  db-logger-microservices:
    container_name: db-logger-microservices
    build:
      context: ./dockerfiles/microservices/db-logger
      dockerfile: db-logger.dockerfile
    working_dir: /app
    volumes:
      - ./microservices/db-logger-microservices:/app
    ports:
      - "3001:3000"
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box

  auth-microservices:
    container_name: auth-microservices
    build:
      context: ./dockerfiles/microservices/auth
      dockerfile: auth.dockerfile
    working_dir: /app
    volumes:
      - ./microservices/auth-microservices:/app
    ports:
      - "3002:3000"
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box
      - postgres-db

  things-microservices:
    container_name: things-microservices
    build:
      context: ./dockerfiles/microservices/things
      dockerfile: things.dockerfile
    working_dir: /app
    volumes:
      - ./microservices/things-microservices:/app
    ports:
      - "3003:3000"
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box
      - postgres-db
      
  postgres-db:
    container_name: postgres-db
    image: postgres:13
    volumes:
      - ./dockerfiles/database/postgres:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_MULTIPLE_DATABASES}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  pg-admin4:
    container_name: pg-admin4
    image: dpage/pgadmin4
    ports:
      - 5050:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}

  kong-database:
    container_name: kong-database
    image: postgres:9.6
    restart: always
    volumes:
      - kong-db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${KONG_POSTGRES_DB}
      - POSTGRES_USER=${KONG_POSTGRES_USER}
      - POSTGRES_PASSWORD=${KONG_POSTGRES_PASSWORD}

  kong-migrate:
    container_name: kong-migrate
    image: kong:2.3.3
    restart: on-failure
    command: kong migrations bootstrap
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=${KONG_POSTGRES_DB}
      - KONG_PG_USER=${KONG_POSTGRES_USER}
      - KONG_PG_PASSWORD=${KONG_POSTGRES_PASSWORD}
    depends_on:
      - kong-database

  kong:
    container_name: kong
    image: kong:2.3.3
    restart: always
    environment:
      - KONG_LOG_LEVEL=debug
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=${KONG_POSTGRES_DB}
      - KONG_PG_USER=${KONG_POSTGRES_USER}
      - KONG_PG_PASSWORD=${KONG_POSTGRES_PASSWORD}
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_PROXY_LISTEN_SSL=0.0.0.0:8443
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    depends_on:
      - kong-migrate
      - kong-database

  konga-prepare:
    container_name: konga-prepare
    image: pantsel/konga:0.14.9
    command: "-c prepare -a postgres -u postgresql://${KONG_POSTGRES_USER}:${KONG_POSTGRES_PASSWORD}@kong-database:5432/${KONGA_POSTGRES_DB}"
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database
  
  konga:
    container_name: konga
    image: pantsel/konga:0.14.9
    restart: on-failure
    environment:
      - DB_ADAPTER=postgres
      - DB_HOST=kong-database
      - DB_USER=${KONG_POSTGRES_USER}
      - DB_PASSWORD=${KONG_POSTGRES_PASSWORD}
      - TOKEN_SECRET=km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      - DB_DATABASE=${KONGA_POSTGRES_DB}
    depends_on:
      - kong-database
    ports:
      - "1337:1337"

  influxdb:
    image: influxdb:2.1.0-alpine
    container_name: influxdb
    restart: always
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASS}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG} 
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
    ports:
      - '8086:8086'
    volumes:
      - influxdb_data:/var/lib/influxdb

  nats-server:
    container_name: nats-server
    build:
      context: ./dockerfiles
      dockerfile: nats.dockerfile
      args:
        - NATS_VERSION=${NATS_VERSION:-alpine}
    ports:
      - 1883:1883
      - 4222:4222

   # Eclipse Mosquitto MQTT Broker
  mosquitto:
    container_name: mosquitto
    build:
      context: ./dockerfiles
      dockerfile: mqtt.dockerfile
      args:
        - MOSQUITTO_VERSION=${MOSQUITTO_VERSION:-latest}
    environment:
      - MOSQUITTO_USERNAME=${MOSQUITTO_USERNAME}
      - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
    restart: always
    volumes:
      - ./scripts:/scripts
    ports:
      - 1884:1883

  #NATS Client
  nats-box:
    container_name: nats-box
    platform: linux/amd64
    image: natsio/nats-box:latest
    stdin_open: true
    tty: true

volumes:
  influxdb_data:
  postgres_data:
  kong-db-data:

networks:
  default:
    name: nats_mqtt_network
    driver: bridge